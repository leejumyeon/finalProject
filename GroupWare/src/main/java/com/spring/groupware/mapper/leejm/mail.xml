<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mail">
	<!-- 받는 메일 검색기능 -->
	<select id="searchReceive" parameterType="HashMap" resultType="com.spring.groupware.commonVO.EmployeesVO">
		select employee_seq, employee_id, employee_name, email, fk_position, fk_department, position_name, department_name 
		from employees_table 
		join position_table on fk_position = position_seq
		join department_table on fk_department = department_seq
		where fk_status != 0 and employee_seq != #{loginSeq} and (employee_name like '%'||#{keyWord}||'%' or email like '%'||#{keyWord}||'%')
	</select>
	
	<!-- 메일 보내기 기능 -->
	<insert id="mailSend" parameterType="com.spring.groupware.commonVO.MailVO">
		insert into mail_table(mail_seq, mail_groupno, fk_employee_seq, subject, content, status, readStatus
		<if test="fileName1!=null and !fileName1.equals('')">
			,fileName1, orgFileName1, fileSize1
		</if>
		<if test="fileName2!=null and !fileName2.equals('')">
			,fileName2, orgFileName2, fileSize2
		</if>
		<if test="fileName3!=null and !fileName3.equals('')">
			,fileName3, orgFileName3, fileSize3
		</if>
		)
		values(mail_table_seq.nextval, #{mail_groupno}, #{fk_employee_seq}, #{subject}, #{content}, #{status}, #{readStatus}
		<if test="fileName1!=null and !fileName1.equals('')">
			,#{fileName1}, #{orgFileName1}, #{fileSize1}
		</if>
		<if test="fileName2!=null and !fileName2.equals('')">
			,#{fileName2}, #{orgFileName2}, #{fileSize2}
		</if>
		<if test="fileName3!=null and !fileName3.equals('')">
			,#{fileName3}, #{orgFileName3}, #{fileSize3}
		</if>
		)
		
		
	</insert>
	
	<!-- 메일 그룹번호 채번하기 -->
	<select id="getMail_groupno" resultType="String">
		select nvl(max(mail_groupno),0) from mail_table
	</select>
	
	<!-- 받은 메일함 조회 -->
	<select id="receiveMailList" resultType="com.spring.groupware.commonVO.MailVO" parameterType="HashMap">
		select 	T.Ron, mail_seq, mail_groupno, readStatus, mailStatus, status, subject, content, regDate, fk_employee_seq, employee_name, email, position_name, department_name
			from(select row_number() over(order by My.mail_seq desc) as Ron, My.mail_seq, mail_groupno, My.readStatus, My.mailStatus, My.status, My.subject, My.content, My.regDate, 
				   You.fk_employee_seq, You.employee_name, You.email, You.position_name, You.department_name	
			from
				(select mail_seq, mail_groupno readStatus, mailStatus, status, subject, content, to_char(regDate, 'yyyy-mm-dd hh24:mi') as regDate 
					from mail_table where mailStatus !=0 and status =1 and fk_employee_seq = #{loginSeq})My join
				(select mail_groupno, fk_employee_seq, employee_name, email, position_name, department_name 
					from mail_table 
						join employees_table on fk_employee_seq =  employee_seq 
						join position_table on fk_position= position_seq 
						join department_table on fk_department = department_seq
					where fk_employee_seq != #{loginSeq} and mail_groupno 
						in(select mail_groupno from mail_table where mailStatus !=0 and status =1 and fk_employee_seq = #{loginSeq})
				)You on mail_groupno = You.mail_groupno
			)T where T.Ron between #{startRno} and #{endRno}

		
	</select>
	
	<!-- 보낸 메일함 조회 -->
	<select id="sendMailList" resultType="com.spring.groupware.commonVO.MailVO" parameterType="HashMap">
		select T.RON, T.mail_groupno, T.fk_employee_seq, T.subject, T.regDate, T.readStatus, T.status, T.email, T.employee_name, T.position_name, T.department_name
			from (select row_number() over(order by mail_groupno desc) as RON, mail_groupno, fk_employee_seq, subject, regDate, readStatus, status, email, employee_name, department_name, position_name
				from (select distinct mail_groupno, fk_employee_seq, subject, to_char(M.regDate, 'yyyy-mm-dd hh24:mi') as regDate,readStatus, status,
						E.email, E.employee_name, D.department_name, P.position_name
				from mail_table M 
				join employees_table E on M.fk_employee_seq = E.employee_seq
				join department_table D on E.fk_department = D.department_seq
				join position_table P on E.fk_position = P.position_seq 
					where M.status = 1 and M.fk_employee_seq != #{loginSeq}  and M.mail_groupno in
						(select mail_groupno from mail_table 
							where status=0 and mailStatus !=0 and fk_employee_seq = #{loginSeq})
				)V
			)T where T.RON between #{startRno} and #{endRno} 
	</select>
	
	<!-- 내게 쓴 메일 조회 -->
	<select id="mineMailList" resultType="com.spring.groupware.commonVO.MailVO" parameterType="HashMap">
		select T.RON, mail_seq, mail_groupno, fk_employee_seq, subject, regDate, readStatus, status, email, employee_name, department_name, position_name
			from(select row_number() over(order by mail_seq desc) as RON, mail_seq, mail_groupno, fk_employee_seq, subject, to_char(M.regDate, 'yyyy-mm-dd hh24:mi') as regDate, readStatus, status,
					E.email, E.employee_name, D.department_name, P.position_name
			from mail_table M 
			join employees_table E on M.fk_employee_seq = E.employee_seq
			join department_table D on E.fk_department = D.department_seq
			join position_table P on E.fk_position = P.position_seq 
				where M.status = 2 and M.mailStatus != 0 and M.fk_employee_seq = #{loginSeq}
			)T where T.RON between #{startRno} and #{endRno} 
	</select>
	
	<!-- 안 읽은 메일 조회 -->
	<select id="noReadMailList" resultType="com.spring.groupware.commonVO.MailVO" parameterType="HashMap">
		select T.RON, mail_seq, mail_groupno, fk_employee_seq, subject, regDate, readStatus, status, email, employee_name, department_name, position_name
			from(select row_number() over(order by mail_seq desc) as RON, mail_seq, mail_groupno, fk_employee_seq, subject, to_char(M.regDate, 'yyyy-mm-dd hh24:mi') as regDate, readStatus, status,
					E.email, E.employee_name, D.department_name, P.position_name
			from mail_table M 
			join employees_table E on M.fk_employee_seq = E.employee_seq
			join department_table D on E.fk_department = D.department_seq
			join position_table P on E.fk_position = P.position_seq 
				where M.mail_groupno in(select mail_groupno from mail_table where mailStatus != 0 and readStatus = 0 and fk_employee_seq = #{loginSeq})
			)T where T.RON between #{startRno} and #{endRno} 
	</select>
	
	<!-- 메일 읽기 -->
	<select id="mailRead" resultType="com.spring.groupware.commonVO.MailVO" parameterType="String">
		select mail_seq, mail_groupno, fk_employee_seq, subject, to_char(M.regDate, 'yyyy-mm-dd hh24:mi') as regDate, readStatus, status,
				E.email, E.employee_name, D.department_name, P.position_name
		from mail_table M 
		join employees_table E on M.fk_employee_seq = E.employee_seq
		join department_table D on E.fk_department = D.department_seq
		join position_table P on E.fk_position = P.position_seq 
			where M.mail_seq = #{mail_seq}
	</select> 
	
	<!-- 읽은 메일 readStatus 업데이트 -->
	<update id="updateReadstatus" parameterType="String">
		update mail_table set readStatus = 1 where mail_seq = #{mail_seq}
	</update>
	
	<!-- 휴지통 이동 -->
	<select id="delMailList" resultType="com.spring.groupware.commonVO.MailVO" parameterType="HashMap">
		select T.RON, mail_seq, mail_groupno, fk_employee_seq, subject, regDate, readStatus, status, email, employee_name, department_name, position_name
			from(select row_number() over(order by mail_seq desc) as RON, mail_seq, mail_groupno, fk_employee_seq, subject, to_char(M.regDate, 'yyyy-mm-dd hh24:mi') as regDate, readStatus, status,
					E.email, E.employee_name, D.department_name, P.position_name
			from mail_table M 
			join employees_table E on M.fk_employee_seq = E.employee_seq
			join department_table D on E.fk_department = D.department_seq
			join position_table P on E.fk_position = P.position_seq 
				where M.mail_groupno in(select mail_groupno from mail_table where mailStatus = 0 and fk_employee_seq = #{loginSeq} )
			)T where T.RON between #{startRno} and #{endRno} 
	</select>
	
	<!-- 첨부파일이 있는 메일 조회 -->
	<select id="attachMailList" resultType="com.spring.groupware.commonVO.MailVO" parameterType="HashMap">
		select T.RON, mail_seq, mail_groupno, fk_employee_seq, subject, regDate, readStatus, status, fileName1, orgFileName1, fileSize1, fileName2, orgFileName2, fileSize2, fileName3, orgFileName3, fileSize3, employee_name, email, position_name, department_name
			from(select row_number() over(order by mail_seq desc) as RON, mail_seq, mail_groupno, fk_employee_seq, subject, to_char(M.regDate, 'yyyy-mm-dd hh24:mi') as regDate, readStatus, status,
					fileName1, orgFileName1, fileSize1, fileName2, orgFileName2, fileSize2, fileName3, orgFileName3, fileSize3,
					E.email, E.employee_name, D.department_name, P.position_name
			from mail_table M 
			join employees_table E on M.fk_employee_seq = E.employee_seq
			join department_table D on E.fk_department = D.department_seq
			join position_table P on E.fk_position = P.position_seq 
				where M.mail_groupno in
					(select mail_groupno from mail_table
						where fileName1 is not null and status != 0 and fk_employee_seq = #{loginSeq}) 
			)T where T.RON between #{startRno} and #{endRno} 
	</select>
	
	<!-- 받은 메일 건 수 -->
	<select id="receiveMailCount" resultType="int"  parameterType="HashMap">
		select count(*) from mail_table where mailStatus !=0 and status =1 and fk_employee_seq = #{loginSeq}
	</select>
	
	<!-- 보낸 메일 건 수 -->
	<select id="sendMailCount" resultType="int" parameterType="HashMap">
		select count(*) from(
			select distinct mail_groupno
			from mail_table 
			where status = 1 and fk_employee_seq != #{loginSeq}  and mail_groupno in
				(select mail_groupno from mail_table 
					where status=0 and mailStatus !=0 and fk_employee_seq = #{loginSeq})
		)
	</select>
	
	<!-- 내게 쓴 메일 건 수 -->
	<select id="mineMailCount" resultType="int" parameterType="HashMap">
		select count(*)
		from mail_table 
			where status = 2 and mailStatus != 0 and fk_employee_seq = #{loginSeq}
	</select>
	
	<!-- 안 읽은 메일 건 수 -->
	<select id="noReadMailCount" resultType="int" parameterType="HashMap">
		select count(*)
		from mail_table 
			where readStatus = 0 and mailStatus != 0 and fk_employee_seq = #{loginSeq}
	</select>
	
	<!-- 휴지통 메일 건 수 -->
	<select id="delMailCount" resultType="int" parameterType="HashMap">
		select count(*)
		from mail_table 
			where mailStatus = 0 and fk_employee_seq = #{loginSeq}
	</select>
	
	<!-- 첨부파일이 있는 메일 건 수 -->
	<select id="attachMailCount" resultType="int" parameterType="HashMap">
		select count(*)
		from mail_table 
			where fileName1 is not null and status != 0 and fk_employee_seq = #{loginSeq}
	</select>
	
</mapper>